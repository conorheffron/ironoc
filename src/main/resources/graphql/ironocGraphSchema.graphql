type DonateItem {
    donate: String!
    link: String!
    img: String!
    alt: String!
    name: String!
    overview: String!
    founded: Int!
    phone: String!
}

input DonateItemOrder {
    name: SortingOrder
    founded: SortingOrder
}

enum SortingOrder {
    ASC
    DESC
}

type Brew {
    title: String!
    description: String
    ingredients: [String!]!
    image: String!
    id: Int!
}

type Query {
    brews: [Brew]!
    donateItems(orderBy: DonateItemOrder): [DonateItem]!
    donateItemsByCountAndOffset(count: Int, offset: Int): [DonateItem]!
    charityOptionByFounded(founded: Int): DonateItem!
    charityOptionByDonateLink(link: String): DonateItem!
    charityOptionByName(name: String): DonateItem!
}

type Mutation {
    addCharityOption(
        donate: String!
        link: String!
        img: String!
        alt: String!
        name: String!
        overview: String!
        founded: Int!
        phone: String!
    ): DonateItem!
}
